<project name = "Project See" default = "run" basedir = ".">
    <!-- Project properties -->
    <property name="source" location="src"/>
    <property name="source.test" location="test"/>
    <property name="zip.name" value="ProjectSee.zip"/>
    <property name="target.base" location="build"/>
    <property name="debug.target" location="${target.base}/debug/classes"/>
    <property name="release.target" location="${target.base}/release/classes"/>
    <include file="project.properties"/>

    <!-- Create a zip file for the professor. -->
    <target name = "zip">
        <zip destfile = "${zip.name}">
            <fileset dir = "." includes = "**/*.java"/>
            <fileset dir = "." includes = "**/*.bluej"/>
            <fileset dir = "." includes = "**/*.txt"/>
            <fileset dir = "." includes = "**/*.xml"/>
        </zip>
    </target>

    <!-- Clean up autogenerated files. -->
    <target name = "clean">
        <delete>
            <fileset dir = "." includes="**/*.zip"/>
            <fileset dir = "." includes="**/*.class"/>
            <fileset dir = "." includes="**/*.ctxt"/>
        </delete>
        <delete dir = "${target.base}"/>
        <delete dir = "**/doc"/>
        <delete dir = "results"/>
    </target>
    <target name = "debug"> 
        <property name="debug.use" value="true"/>
    </target>
    <target name = "prereqs">
        <mkdir dir = "${target.base}"/>
        <mkdir dir = "${source}"/>
        <mkdir dir = "${source.test}"/>
        <mkdir dir = "results"/>
        <!-- <mkdir dir = "results"/> -->
    </target>

    <!-- Compile source. -->
    <target name = "buildDebug" depends="prereqs" if="debug.use"> 
        <property name="cp" location="${debug.target}"/>
        <mkdir dir = "${debug.target}"/>
        <javac srcdir = "${source}" destdir = "${debug.target}" debug = "on">
            <classpath>
                <pathelement path = "${debug.target}"/>
                <pathelement path = "${junit.path}"/>
            </classpath>
            <!--<compilerarg value="-Xlint"/>-->
        </javac>
        <javac srcdir = "${source.test}" destdir = "${debug.target}" debug = "on">
            <classpath>
                <pathelement path = "${debug.target}"/>
                <pathelement path = "${junit.path}"/>
            </classpath>
            <!--<compilerarg value="-Xlint"/>-->
        </javac>
    </target>

    <!-- Compile source. -->
    <target name = "buildRelease" depends="prereqs" unless="debug.use">
        <property name="cp" location="${release.target}"/>
        <mkdir dir = "${release.target}"/>
        <javac srcdir = "${source}" destdir = "${release.target}">
            <classpath>
                <pathelement path = "${debug.target}"/>
            </classpath>
            <exclude name="test/"/>
        </javac>
    </target>
    <target name = "build" depends="buildRelease,buildDebug"> 
    </target>

    <!-- Run the program. -->
    <target name = "run" depends = "build">
        <java classname = "Plays" classpath = "${cp}"
         failonerror = "true" >
            <!-- Sample argument -->
            <arg value="test"/>
        </java>
    </target>
    
    <!-- Run experiment 1. -->
    <target name = "exp1" depends = "build">
        <java classname = "Experiment" classpath = "${cp}"
         failonerror = "true" >
            <!-- File name. -->
            <arg value="src/AllDrawingArchiveTable.csv"/>
            <!-- Designate experiment 1 -->
            <arg value="1"/>
            <!-- Output prefix. -->
            <arg value="results/output"/>
        </java>
    </target>

    <!-- Run experiment 3. -->
    <target name = "exp3" depends = "build">
        <java classname = "Experiment" classpath = "${cp}"
         failonerror = "true" >
            <!-- File name. -->
            <arg value="src/AllDrawingArchiveTable.csv"/>
            <!-- Designate experiment 3 -->
            <arg value="3"/>
            <!-- Output prefix. -->
            <arg value="results/output"/>
        </java>
    </target>

    <!-- We need test units. -->
    <target name = "test" depends = "debug,build">
        <junit printsummary = "yes" haltonfailure = "true">
            <formatter type = "plain" usefile = "false"/>
            <classpath>
                <pathelement path = "${cp}"/>
                <pathelement path = "${junit.path}"/>
            </classpath>
            <test name = ""/>
        </junit>
    </target>
</project>
